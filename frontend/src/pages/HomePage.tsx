import { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { useForm } from 'react-hook-form'
import { Upload, FileText, Building, Briefcase, Brain, MessageSquare, BarChart3 } from 'lucide-react'
import { createInterview } from '../services/api'

interface JobDescriptionForm {
  job_title: string
  company: string
  job_description: string
}

interface HomePageProps {
  setCurrentInterview: (id: number) => void
}

const HomePage = ({ setCurrentInterview }: HomePageProps) => {
  const navigate = useNavigate()
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState('')
  
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<JobDescriptionForm>()

  const onSubmit = async (data: JobDescriptionForm) => {
    setIsLoading(true)
    setError('')
    
    try {
      const interview = await createInterview(data)
      setCurrentInterview(interview.id)
      navigate(`/interview/${interview.id}`)
    } catch (err) {
      setError('Failed to create interview. Please try again.')
      console.error('Error creating interview:', err)
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <div className="max-w-4xl mx-auto">
      <div className="text-center mb-12">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          AI-Powered Mock Interviews
        </h1>
        <p className="text-xl text-gray-600 max-w-2xl mx-auto">
          Upload a job description and get personalized interview questions generated by AI. 
          Practice with real-time feedback and improve your interview skills.
        </p>
      </div>

      <div className="card">
        <div className="flex items-center mb-6">
          <Upload className="h-6 w-6 text-primary-600 mr-3" />
          <h2 className="text-2xl font-semibold text-gray-900">Create New Interview</h2>
        </div>

        {error && (
          <div className="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg text-red-700">
            {error}
          </div>
        )}

        <form onSubmit={handleSubmit(onSubmit)} className="space-y-6">
          <div>
            <label htmlFor="job_title" className="block text-sm font-medium text-gray-700 mb-2">
              <Briefcase className="h-4 w-4 inline mr-2" />
              Job Title
            </label>
            <input
              type="text"
              id="job_title"
              {...register('job_title', { required: 'Job title is required' })}
              className="input-field"
              placeholder="e.g., Senior Software Engineer"
            />
            {errors.job_title && (
              <p className="mt-1 text-sm text-red-600">{errors.job_title.message}</p>
            )}
          </div>

          <div>
            <label htmlFor="company" className="block text-sm font-medium text-gray-700 mb-2">
              <Building className="h-4 w-4 inline mr-2" />
              Company (Optional)
            </label>
            <input
              type="text"
              id="company"
              {...register('company')}
              className="input-field"
              placeholder="e.g., Google, Microsoft"
            />
          </div>

          <div>
            <label htmlFor="job_description" className="block text-sm font-medium text-gray-700 mb-2">
              <FileText className="h-4 w-4 inline mr-2" />
              Job Description
            </label>
            <textarea
              id="job_description"
              {...register('job_description', { 
                required: 'Job description is required',
                minLength: { value: 50, message: 'Job description must be at least 50 characters' }
              })}
              rows={8}
              className="input-field resize-none"
              placeholder="Paste the job description here. Include requirements, responsibilities, and any specific skills or technologies mentioned..."
            />
            {errors.job_description && (
              <p className="mt-1 text-sm text-red-600">{errors.job_description.message}</p>
            )}
          </div>

          <div className="flex items-center justify-between pt-4">
            <div className="text-sm text-gray-600">
              <p>• AI will generate 8 personalized questions</p>
              <p>• 3 behavioral + 5 technical questions</p>
              <p>• Real-time feedback and scoring</p>
            </div>
            
            <button
              type="submit"
              disabled={isLoading}
              className="btn-primary disabled:opacity-50 disabled:cursor-not-allowed flex items-center"
            >
              {isLoading ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                  Creating Interview...
                </>
              ) : (
                <>
                  <Upload className="h-4 w-4 mr-2" />
                  Start Interview
                </>
              )}
            </button>
          </div>
        </form>
      </div>

      <div className="mt-12 grid md:grid-cols-3 gap-6">
        <div className="card text-center">
          <div className="w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center mx-auto mb-4">
            <Brain className="h-6 w-6 text-primary-600" />
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">AI-Generated Questions</h3>
          <p className="text-gray-600">
            Questions tailored to the specific job description and requirements
          </p>
        </div>

        <div className="card text-center">
          <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-4">
            <MessageSquare className="h-6 w-6 text-green-600" />
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">Real-time Feedback</h3>
          <p className="text-gray-600">
            Get instant feedback on your responses with specific improvement suggestions
          </p>
        </div>

        <div className="card text-center">
          <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-4">
            <BarChart3 className="h-6 w-6 text-purple-600" />
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">Performance Analytics</h3>
          <p className="text-gray-600">
            Track your progress and identify areas for improvement
          </p>
        </div>
      </div>
    </div>
  )
}

export default HomePage 